######################### Do as minimum as possible in order to make it complete  chip first - encoder (no ecc, decription) - c model, arch, verilog,systemverilog, FPGA(emulation)
#################################
Work plan for final year project.

Question you have to answer before starting programming (15.5 hours in total - two days of work) - work on te quesiton you have to naswre.
	* what is finite Galois Field implemenenation for 256 elements (1byte) and how you do add substract, multiply divide in it ? (2hours) - many days spent
            1. eucledian algorithm - 45 mins - so far - 15 + 120 + 5 = 140 min - 2 hour 20 mins
            2. work through rest of two papers for 2^8 (2 hours)

	*what is sbox matrix and how do you generated ? (1 hours)
	* By the definition in order to perform MixCollumn each column in the State matrix should be treated as polynomial in the GF(2^8) field and then multiplied by the modulo x4+1, as it is show in [9, 10]. (1hour)
	* once you understand the finite field, understand how the mmatrix for performing multicollums is being generated. (1hour)
	*. are new rows for round keys in key exansion generated using just xor or the whole operation - take a look at the official spec ? (1hours)
	*How is the key being generated, stored and transmitted (key generator module ?) what key sizes are you going to work with ? (1.5 hours)  do you even need module for a key - it might need to transmitter somewhere else.
	*How diligent should you be with the C++ coding, can you implement it in systemverilog coding later on ? (2hours)
	*What kind of C model are you going to create ? (temporal unitmed model - as simple as possble - read on it) (1hours)
	*Programming plan (make this plan after you've answered the previous questions)
--------------------------------------------------------------

Things to be dones after the first C model C model
##################
Review time waster points (little reaseach as possible)
#################

*Your project plan pretty much is given in your lit review
*Architecture of the chip - plan what the outlay of the chip is going to be and what algorithms do they implement (design pseudo codes before the acutal verilog codes) - how are modules interacting, what signals do they exchange with.
*Test plan - functionality that should be tested in 
---------------------------------
Questions to think on later on -
	*what are real life uses of your chip (name couple of real applications) - there is going to be quesiton like that for sure.
	*can you use UVM ? read on UVM and OVM ( they are about 200 pages each, you have to know the differnce, as you pretty much worked on OVM before - do not read the spec. find a summary and then decide if you need it.
	*when writing the report, pay attention to the writing guidlines (styling ) and the langues- you are certainly getting marked down because of that.
-------------------------------
#### When you do your first sucesfull emulation######
Bottom - up approach (when you created c model for encoder, verilog and sysverilog codes with archs and etc)
*understand the algorithm and maths of the decryption process (understanding just encryption is not enough and can cause problems and increased complexity in the design implementation) (2 hours)
	*Fault detection coutnermeassure (how do you implement it (just understand the algorithm - EDC (error detection code) and prediction algorithms for EDC codes) - how do you inject faults(necessary for testing) (2 hours)
------------------------------

#########################################
Deadlines
#########################################
Risk assesment complete - Monday 12hJan (Week 11)
Project Plan - Friday 16h Jan (Week 11)
Presentation - Monday 19th Jan (Week 12)
Project Hand in - Friday 29th May (Week 26)
Poster Hand in - Friday 5th June (Week 27)
Vivas - Thursday 4th (Week 27/28)
Poster Presentation - Thursday 25th (Week 30)

###########################################
Detailed working plan - before starting each day make sure you have planned the assigments for each task and given hourly goals.
Lent term:   09 January 2015 to 20 March 2015
Summer term: 17 April   2015 to 26 June  2015
###########################################

Lit review - 31/10/14
    Research for target - 2 weeks  26/10
    Research on target  - 2 weeks  10/10
    Write up the review - 1 week - 24/10

Get complete understanding of maths and algortihm functions/including keys and what data goes in (5 days) 02/01 - 06/01
Maths - 02/01
Mathematical implmentations of algorithms - 03/01 - 04/01
Keys and what data width and data goes in - 05/01 - 06/01

Micro-architecture, design and verification plan and project plan(system verilog/fpga) plan (5 days)
Micro-arch - 07/01 - 08/01
Design RTL and C model plan /Verfication plan/FPGA PLAN(emulation) - 09/01 - 10/01
Project PLAn - 11/01

C model (4 days) - use a ready made code (functions) from microsoft
Research on the Crypto++ library 12/01 - 13/01
Use Crypto++ library to create a C model 14/01 - 15/01

Create presenation - 15/01 - 17/01

Verilog - two days - 06/02 - 07/02
AddRoundKey 
BytesSub
ShiftRow
MixColumn
expand keys module
cntrl_flow


SystemVerilog (30 days) (try to make sure that you can use a ready C model) - might take less time for that, if you finish before 05/03 start working onf the novelty.
Configure - Generator 08/02 - 09/02
AddRoundKey Testbench, checker - 10/02 - 11/02
BytesSub Testbench, checker 12/02 - 14/02
ShiftRow Testbench, checker 15/02 - 16/02
MixColumn Testbench, checker 17/02 - 18/02
expand keys module Testbench, checker 19/02 - 20/02
Top level testbench - checker 21/02 - 22/02
Coverage (top level, no need for module coverage) - 24/02 - 25/02

#################################################################################################################
There are going to be 4 days of coursework and 2 progress tests, might be job interviews - so add 10 day buffer 
#################################################################################################################


Start working on revision - 05/03 - 6 weeks, 1 week per module.

Create revision plan 
05/03 - 11/03 - managment
12/03 - 18/03 - electrical drives
19/03 - 25/03 - IC's
26/03 - 01/04 - Analogue
02/04 - 08/04 - Programmable Systems
09/04 - 15/05 - Optics and Wireless

5 days cushion - for extra revision and final year project

Exams - 20/04 - 28/05

Start writing your report -
 
29/04 - 03/05 - write up 50 - 60 pages in 5 days - start writing it up.


- Weeks cushion for finishing up the uncoded things in the report.
