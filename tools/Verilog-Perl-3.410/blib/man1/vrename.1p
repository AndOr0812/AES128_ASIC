.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "VRENAME 1p"
.TH VRENAME 1p "2015-03-14" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
vrename \- change signal names across many Verilog files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  vrename <filename_or_directory>...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Vrename will allow a signal to be changed across all levels of the design
hierarchy, or to create a cross reference of signal names.  (It actually
includes module names, macros, and other definitions, so those can be
changed too.)
.PP
Vpm uses a three step process.  First, use
.PP
.Vb 1
\&    vrename \-\-list  [<file.v>...]  [<directory>....]
.Ve
.PP
This reads the specified files, or all files below the specified directory,
and creates a signals.vrename file.
.PP
Now, edit the signals.vrename file manually to specify the new signal
names.  Then, use
.PP
.Vb 1
\&    vrename \-\-change [<file.v>...]  [<directory>....]
.Ve
.SH "ARGUMENTS"
.IX Header "ARGUMENTS"
vrename takes the following arguments:
.IP "\-\-help" 4
.IX Item "--help"
Displays this message and program version and exits.
.IP "\-\-version" 4
.IX Item "--version"
Displays program version and exits.
.IP "\-\-change" 4
.IX Item "--change"
Take the signals file signals.vrename in the current directory
and change the signals in the design as specified by the
signals file.  Either \-\-list or \-\-change must be specified.
.IP "\-\-changefile {file}" 4
.IX Item "--changefile {file}"
Use the given filename instead of \*(L"signals.vrename\*(R".
.IP "\-\-changelang" 4
.IX Item "--changelang"
Include in the signals.vrename file the template needed to change the
language standard for the file.  For the first run, use \*(L"\-\-list
\&\-\-changelang\*(R" and \-\-language to specify the file's original language, then
rerun with the \*(L"\-\-change\*(R" option.  The files will get escaped identifiers
for the most recent Verilog standard.  For example with \-\-language
1364\-2005, \*(L"do\*(R" will become \*(L"\edo \*(R".
.IP "\-\-crypt" 4
.IX Item "--crypt"
With \-\-list, randomize the signal renames.  With \-\-change, compress spaces
and comments and apply those renames listed in the file (presumably created
with vrename \-\-list \-\-crypt).
.Sp
The comment /*ENCRYPT_ME*/ must be included in all files that need to be
encrypted, or use the \-\-cryptall flag.  If a signal should not be
encrypted, it can simply be set in the signals.vrename list to be changed
to itself.  After encrypting, you may want to save the signals.vrename file
so you have a key for decoding, and also so that it may be used for the
next encryption run.  When used in this way for the next encryption run,
only new signals will get new encryptions, all other encryptions will be
encrypted the same.
.IP "\-\-cryptall" 4
.IX Item "--cryptall"
As with \-\-crypt, but put cryptic names into signals.vrename even if the
file does not include \s-1ENCRYPT_ME. \s0 Generally you will then need to edit the
signals.vrename file manually to exclude any top level signals that should
be preserved.
.IP "\-\-keywords" 4
.IX Item "--keywords"
Include keywords in the renaming list.  Default is to ignore keywords, as
changing a keyword will probably result in unrunnable code, however,
occasionally it may be necessary to rename signals which happen to match
the name of keywords recently added to the language (such as 'bit').
.IP "\-\-language <1364\-1995|1364\-2001|1364\-2005|1800\-2005|1800\-2009|1800\-2012>" 4
.IX Item "--language <1364-1995|1364-2001|1364-2005|1800-2005|1800-2009|1800-2012>"
Set the language standard for the files.  This determines which tokens are
signals versus keywords, such as the ever-common \*(L"do\*(R" (data-out signal,
versus a do-while loop keyword).
.IP "\-\-list" 4
.IX Item "--list"
Create a list of signals in the design and write to
signals.vrename.  Either \-\-list or \-\-change must be specified.
.IP "\-\-nowrite" 4
.IX Item "--nowrite"
Don't write the actual changes, just report the files that would be changed.
.IP "\-\-o {dir}" 4
.IX Item "--o {dir}"
Use the given directory for output instead of the current directory.
.IP "\-\-read" 4
.IX Item "--read"
Read the changes list, allows \-\-list to append to the
changes already read.
.IP "\-\-xref" 4
.IX Item "--xref"
Include a cross reference of where the signals are used.
\&\-\-list must also be specified.
.SH "DISTRIBUTION"
.IX Header "DISTRIBUTION"
Verilog-Perl is part of the <http://www.veripool.org/> free Verilog \s-1EDA\s0
software tool suite.  The latest version is available from \s-1CPAN\s0 and from
<http://www.veripool.org/verilog\-perl>.
.PP
Copyright 2000\-2015 by Wilson Snyder.  This package is free software; you
can redistribute it and/or modify it under the terms of either the \s-1GNU\s0
Lesser General Public License Version 3 or the Perl Artistic License Version 2.0.
.SH "AUTHORS"
.IX Header "AUTHORS"
Wilson Snyder <wsnyder@wsnyder.org>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Verilog-Perl, Verilog::Parser
